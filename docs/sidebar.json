{
    "path": "/home/barbosa/javascript/useform/docs/pages",
    "name": "pages",
    "children": [
        {
            "path": "/home/barbosa/javascript/useform/docs/pages/docs",
            "name": "docs",
            "children": [
                {
                    "path": "/home/barbosa/javascript/useform/docs/pages/docs/api-reference",
                    "name": "api-reference",
                    "children": [
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/api-reference/create-form.md",
                            "name": "create-form.md",
                            "meta": {
                                "title": "createForm",
                                "description": "This guide describes all resources of createForm function.",
                                "tags": "react, form, useform, createform, use-form, debounce, debounced, hook, yup, validation, form-error, error"
                            },
                            "url": "/docs/api-reference/create-form",
                            "relativePath": "/docs/pages/docs/api-reference/create-form.md"
                        }
                    ],
                    "title": "Api reference",
                    "relativePath": "/docs/pages/docs/api-reference"
                },
                {
                    "path": "/home/barbosa/javascript/useform/docs/pages/docs/creating-a-form",
                    "name": "creating-a-form",
                    "children": [
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/creating-a-form/custom-components.mdx",
                            "name": "custom-components.mdx",
                            "meta": {
                                "title": "Custom components",
                                "description": "Learn how to use Createform to work with custom components.",
                                "tags": "react, form, useform,createform, use-form, debounce, debounced, hook, react-select, select"
                            },
                            "url": "/docs/creating-a-form/custom-components",
                            "relativePath": "/docs/pages/docs/creating-a-form/custom-components.mdx"
                        },
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/creating-a-form/native-elements.mdx",
                            "name": "native-elements.mdx",
                            "meta": {
                                "title": "Native HTML elements",
                                "description": "Learn how to use native HTML elements in order to create better forms.",
                                "tags": "react, form, useform, createform, use-form, debounce, debounced, hook, native-forms, html, input, select, radio, checkbox"
                            },
                            "url": "/docs/creating-a-form/native-elements",
                            "relativePath": "/docs/pages/docs/creating-a-form/native-elements.mdx"
                        }
                    ],
                    "title": "Creating a form",
                    "relativePath": "/docs/pages/docs/creating-a-form"
                },
                {
                    "path": "/home/barbosa/javascript/useform/docs/pages/docs/how-it-works",
                    "name": "how-it-works",
                    "children": [
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/how-it-works/concepts.mdx",
                            "name": "concepts.mdx",
                            "meta": {
                                "title": "Concepts",
                                "description": "How Createform works, and why we decided to do it this way.",
                                "tags": "react, form, useform, createform, use-form, debounce, debounced, hook"
                            },
                            "url": "/docs/how-it-works/concepts",
                            "relativePath": "/docs/pages/docs/how-it-works/concepts.mdx"
                        }
                    ],
                    "title": "How it works",
                    "relativePath": "/docs/pages/docs/how-it-works"
                },
                {
                    "path": "/home/barbosa/javascript/useform/docs/pages/docs/introduction",
                    "name": "introduction",
                    "children": [
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/introduction/quick-start.mdx",
                            "name": "quick-start.mdx",
                            "meta": {
                                "title": "Quick Start",
                                "description": "Your first step to creating forms.",
                                "tags": "react, form, useform, createform, use-form, hook"
                            },
                            "url": "/docs/introduction/quick-start",
                            "relativePath": "/docs/pages/docs/introduction/quick-start.mdx"
                        }
                    ],
                    "title": "Introduction",
                    "relativePath": "/docs/pages/docs/introduction"
                },
                {
                    "path": "/home/barbosa/javascript/useform/docs/pages/docs/tutorials",
                    "name": "tutorials",
                    "children": [
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/tutorials/creating-forms.mdx",
                            "name": "creating-forms.mdx",
                            "meta": {
                                "title": "Creating forms",
                                "description": "This tutorial will show you how to create forms easily with Createform.",
                                "tags": "react, form, useform, use-form, debounce, debounced, hook, create, creating-a-form, html"
                            },
                            "url": "/docs/tutorials/creating-forms",
                            "relativePath": "/docs/pages/docs/tutorials/creating-forms.mdx"
                        },
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/tutorials/multi-step-form.md",
                            "name": "multi-step-form.md",
                            "meta": {
                                "title": "Multi-step form",
                                "description": "In this tutorial I want to show you how easily you can build a multi-step form using Createform.",
                                "tags": "react, form, useform, createform, use-form, debounce, debounced, hook, create, creating-a-form, html, multi-step, multistep"
                            },
                            "url": "/docs/tutorials/multi-step-form",
                            "relativePath": "/docs/pages/docs/tutorials/multi-step-form.md"
                        },
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/tutorials/reactjs-building-forms.md",
                            "name": "reactjs-building-forms.md",
                            "meta": {
                                "title": "ReactJs Building forms",
                                "description": "Hello friends, today I will talk to you about forms in React.",
                                "tags": "react, form, webdev, javascript"
                            },
                            "url": "/docs/tutorials/reactjs-building-forms",
                            "relativePath": "/docs/pages/docs/tutorials/reactjs-building-forms.md"
                        }
                    ],
                    "title": "Tutorials",
                    "relativePath": "/docs/pages/docs/tutorials"
                },
                {
                    "path": "/home/barbosa/javascript/useform/docs/pages/docs/using-your-form",
                    "name": "using-your-form",
                    "children": [
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/using-your-form/debounced-form.mdx",
                            "name": "debounced-form.mdx",
                            "meta": {
                                "title": "Debounced mode",
                                "description": "When you use debounced form the debounce parameter delays the updating of the state until the user has stopped changing inputs for a predetermined amount of time.",
                                "tags": "react, form, useform,createform, use-form, debounce, debounced, hook, reactjs"
                            },
                            "url": "/docs/using-your-form/debounced-form",
                            "relativePath": "/docs/pages/docs/using-your-form/debounced-form.mdx"
                        },
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/using-your-form/onchange-form.mdx",
                            "name": "onchange-form.mdx",
                            "meta": {
                                "title": "OnChange mode",
                                "description": "When using controlled forms, the input value is set to state values and then updated via React events. React form controlled is the most popular aproach in reactjs.",
                                "tags": "react, form, useform, use-form, hook, controlled-form, controlled"
                            },
                            "url": "/docs/using-your-form/onchange-form",
                            "relativePath": "/docs/pages/docs/using-your-form/onchange-form.mdx"
                        },
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/using-your-form/onsubmit-form.mdx",
                            "name": "onsubmit-form.mdx",
                            "meta": {
                                "title": "OnSubmit mode",
                                "description": "Uncontrolled forms are the most performant way to create react forms. With uncontrolled input values, there is no updating or changing of any states. What you submit is what you get.",
                                "tags": "react, form, useform, use-form, createform, debounce, debounced, hook, onsubmit"
                            },
                            "url": "/docs/using-your-form/onsubmit-form",
                            "relativePath": "/docs/pages/docs/using-your-form/onsubmit-form.mdx"
                        }
                    ],
                    "title": "Using your form",
                    "relativePath": "/docs/pages/docs/using-your-form"
                },
                {
                    "path": "/home/barbosa/javascript/useform/docs/pages/docs/validation",
                    "name": "validation",
                    "children": [
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/validation/form-validation.mdx",
                            "name": "form-validation.mdx",
                            "meta": {
                                "title": "Form validation",
                                "description": "Learn how to validate form values using use-form.",
                                "tags": "react, form, useform, createform, use-form, debounce, debounced, hook, yup, validation, form-error, error, zod"
                            },
                            "url": "/docs/validation/form-validation",
                            "relativePath": "/docs/pages/docs/validation/form-validation.mdx"
                        },
                        {
                            "path": "/home/barbosa/javascript/useform/docs/pages/docs/validation/inline-validation.mdx",
                            "name": "inline-validation.mdx",
                            "meta": {
                                "title": "Iinline validation",
                                "description": "Learn how to validate form values using field by field.",
                                "tags": "react, form, useform, createform, use-form, debounce, debounced, hook, yup, validation, form-error, error, zod"
                            },
                            "url": "/docs/validation/inline-validation",
                            "relativePath": "/docs/pages/docs/validation/inline-validation.mdx"
                        }
                    ],
                    "title": "Validation",
                    "relativePath": "/docs/pages/docs/validation"
                }
            ],
            "title": "Docs",
            "relativePath": "/docs/pages/docs"
        }
    ],
    "title": "Pages",
    "relativePath": "/docs/pages"
}
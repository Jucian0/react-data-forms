{"remainingRequest":"/home/barbosa/javascript/useform/packages/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/home/barbosa/javascript/useform/packages/docs/src/components/quick-start-demo/index.jsx","dependencies":[{"path":"/home/barbosa/javascript/useform/packages/docs/src/components/quick-start-demo/index.jsx","mtime":1603657338137},{"path":"/home/barbosa/javascript/useform/node_modules/cache-loader/dist/cjs.js","mtime":1603638032289},{"path":"/home/barbosa/javascript/useform/packages/docs/node_modules/babel-loader/lib/index.js","mtime":1603638031594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvYmFyYm9zYS9qYXZhc2NyaXB0L3VzZWZvcm0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7Q29udGFpbmVyLFJvdyxDb2x9ZnJvbSdyZWFjdC1ncmlkLXN5c3RlbSc7aW1wb3J0e0lucHV0LFJhbmdlLENvbnRhaW5lckpzb25WaWV3LEJ1dHRvbixCdXR0b25zfWZyb20nLi4nO2ltcG9ydCBKU09OUHJldHR5IGZyb20ncmVhY3QtanNvbi1wcmV0dHknO2ltcG9ydHt1c2VGb3JtfWZyb20nQGZvcm1zL3VzZWZvcm0nO2NvbnN0IGluaXRpYWxWYWx1ZXM9e25hbWU6J0plc3NlJyxlbWFpbDonamVzc2VAamVzc2UuY29tJyxzY29yZToyNX07ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUXVpY2tTdGFydERlbW8oKXtjb25zdHtyZWdpc3RlcixyZXNldEZvcm0scmVzZXRGaWVsZFZhbHVlLHN0YXRlfT11c2VGb3JtKHtpbml0aWFsVmFsdWVzLGlzQ29udHJvbGxlZDp0cnVlfSk7cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3csbnVsbCwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb2wse3NtOjZ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KElucHV0LF9leHRlbmRzKHtwbGFjZWhvbGRlcjoiTmFtZSJ9LHJlZ2lzdGVyKCduYW1lJykpKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dCxfZXh0ZW5kcyh7cGxhY2Vob2xkZXI6IkUtbWFpbCIsdHlwZToiZW1haWwifSxyZWdpc3RlcignZW1haWwnKSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJhbmdlLHJlZ2lzdGVyKCdzY29yZScpKSksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29sLHtzbTo2LHN0eWxlOnttYXJnaW5Ub3A6MTB9fSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb250YWluZXJKc29uVmlldyxudWxsLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEpTT05QcmV0dHkse2lkOiJqc29uLXByZXR0eSIsZGF0YTpzdGF0ZS52YWx1ZXN9KSkpKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3csbnVsbCwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb2wse3NtOjEyfSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b25zLG51bGwsLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLHt0eXBlOiJidXR0b24iLG9uQ2xpY2s6cmVzZXRGb3JtfSwiUmVzZXQiKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24se3R5cGU6ImJ1dHRvbiIsb25DbGljazooKT0+cmVzZXRGaWVsZFZhbHVlKCdzY29yZScpfSwiUmVzZXQgU2NvcmUiKSkpKSk7fQ=="},{"version":3,"sources":["/home/barbosa/javascript/useform/packages/docs/src/components/quick-start-demo/index.jsx"],"names":["React","Container","Row","Col","Input","Range","ContainerJsonView","Button","Buttons","JSONPretty","useForm","initialValues","name","email","score","QuickStartDemo","register","resetForm","resetFieldValue","state","isControlled","marginTop","values"],"mappings":"uGAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,GAAzB,KAAoC,mBAApC,CACA,OAASC,KAAT,CAAgBC,KAAhB,CAAuBC,iBAAvB,CAA0CC,MAA1C,CAAkDC,OAAlD,KAAiE,IAAjE,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CAEA,KAAMC,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAE,OADc,CAEpBC,KAAK,CAAE,iBAFa,CAGpBC,KAAK,CAAE,EAHa,CAAtB,CAMA,cAAe,SAASC,CAAAA,cAAT,EAA0B,CACvC,KAAM,CAAEC,QAAF,CAAYC,SAAZ,CAAuBC,eAAvB,CAAwCC,KAAxC,EAAkDT,OAAO,CAAC,CAC9DC,aAD8D,CAE9DS,YAAY,CAAE,IAFgD,CAAD,CAA/D,CAKA,mBACE,qDACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,KAAD,WAAO,WAAW,CAAC,MAAnB,EAA8BJ,QAAQ,CAAC,MAAD,CAAtC,EADF,cAEE,oBAAC,KAAD,WAAO,WAAW,CAAC,QAAnB,CAA4B,IAAI,CAAC,OAAjC,EAA6CA,QAAQ,CAAC,OAAD,CAArD,EAFF,cAGE,oBAAC,KAAD,CAAWA,QAAQ,CAAC,OAAD,CAAnB,CAHF,CADF,cAME,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,KAAK,CAAE,CAAEK,SAAS,CAAE,EAAb,CAAnB,eACE,oBAAC,iBAAD,mBACE,oBAAC,UAAD,EAAY,EAAE,CAAC,aAAf,CAA6B,IAAI,CAAEF,KAAK,CAACG,MAAzC,EADF,CADF,CANF,CADF,cAaE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,oBAAC,OAAD,mBACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEL,SAA/B,UADF,cAIE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,IAAMC,eAAe,CAAC,OAAD,CAApD,gBAJF,CADF,CADF,CAbF,CADF,CA4BD","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-grid-system'\nimport { Input, Range, ContainerJsonView, Button, Buttons } from '..'\nimport JSONPretty from 'react-json-pretty'\nimport { useForm } from '@forms/useform'\n\nconst initialValues = {\n  name: 'Jesse',\n  email: 'jesse@jesse.com',\n  score: 25\n}\n\nexport default function QuickStartDemo() {\n  const { register, resetForm, resetFieldValue, state } = useForm({\n    initialValues,\n    isControlled: true\n  })\n\n  return (\n    <>\n      <Row>\n        <Col sm={6}>\n          <Input placeholder=\"Name\" {...register('name')} />\n          <Input placeholder=\"E-mail\" type=\"email\" {...register('email')} />\n          <Range {...register('score')} />\n        </Col>\n        <Col sm={6} style={{ marginTop: 10 }}>\n          <ContainerJsonView>\n            <JSONPretty id=\"json-pretty\" data={state.values}></JSONPretty>\n          </ContainerJsonView>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          <Buttons>\n            <Button type=\"button\" onClick={resetForm}>\n              Reset\n            </Button>\n            <Button type=\"button\" onClick={() => resetFieldValue('score')}>\n              Reset Score\n            </Button>\n          </Buttons>\n        </Col>\n      </Row>\n    </>\n  )\n}\n"]}]}
{"remainingRequest":"/home/barbosa/javascript/useform/packages/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/home/barbosa/javascript/useform/packages/useform/src/utils/index.ts","dependencies":[{"path":"/home/barbosa/javascript/useform/packages/useform/src/utils/index.ts","mtime":1603637821148},{"path":"/home/barbosa/javascript/useform/node_modules/cache-loader/dist/cjs.js","mtime":1603638032289},{"path":"/home/barbosa/javascript/useform/packages/docs/node_modules/babel-loader/lib/index.js","mtime":1603638031594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGNvbnN0IGlzUmFkaW89dHlwZT0+dHlwZT09PSdyYWRpbyc7ZXhwb3J0IGNvbnN0IGlzQ2hlY2tib3g9dHlwZT0+dHlwZT09PSdjaGVja2JveCc7ZXhwb3J0IGZ1bmN0aW9uIGRlYm91bmNlKGZuLHdhaXQsaW1tZWRpYXRlKXtsZXQgdGltZW91dDtyZXR1cm4oLi4uYXJncyk9Pntjb25zdCBjb250ZXh0PXRoaXM7Y29uc3QgbGF0ZXI9KCk9Pnt0aW1lb3V0PW51bGw7aWYoIWltbWVkaWF0ZSlmbi5hcHBseShjb250ZXh0LGFyZ3MpO307Y29uc3QgY2FsbE5vdz1pbW1lZGlhdGUmJiF0aW1lb3V0O2NsZWFyVGltZW91dCh0aW1lb3V0KTt0aW1lb3V0PXNldFRpbWVvdXQobGF0ZXIsd2FpdCk7aWYoY2FsbE5vdyl7Zm4uYXBwbHkoY29udGV4dCxhcmdzKTt9fTt9ZXhwb3J0IGZ1bmN0aW9uIGRlZXBDb21wYXJhdGl2ZShmaXJzdFZhbHVlLHNlY29uZFZhbHVlKXtsZXQgcmVzdWx0PWZhbHNlO2lmKHR5cGVvZiBmaXJzdFZhbHVlPT09J29iamVjdCcpe3Jlc3VsdD1KU09OLnN0cmluZ2lmeShmaXJzdFZhbHVlKSE9PUpTT04uc3RyaW5naWZ5KHNlY29uZFZhbHVlKTt9ZWxzZXtyZXN1bHQ9U3RyaW5nKGZpcnN0VmFsdWUpIT09U3RyaW5nKHNlY29uZFZhbHVlKTt9cmV0dXJue2lzRXF1YWw6KCk9PnJlc3VsdD09PXRydWUsaXNEaWZmZXJlbnQ6KCk9PnJlc3VsdD09PWZhbHNlfTt9ZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHkob2JqKXtyZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGg+MDt9ZXhwb3J0IGZ1bmN0aW9uIG1ha2VEb3ROb3RhdGlvbihzdHIpe3JldHVybiBzdHIuc3BsaXQoJ1snKS5qb2luKCcuJykuc3BsaXQoJ10nKS5qb2luKCcnKTt9"},{"version":3,"sources":["/home/barbosa/javascript/useform/packages/useform/src/utils/index.ts"],"names":["isRadio","type","isCheckbox","debounce","fn","wait","immediate","timeout","args","context","later","apply","callNow","clearTimeout","setTimeout","deepComparative","firstValue","secondValue","result","JSON","stringify","String","isEqual","isDifferent","isEmpty","obj","Object","keys","length","makeDotNotation","str","split","join"],"mappings":"AAAA,MAAO,MAAMA,CAAAA,OAAO,CAAIC,IAAD,EAAkBA,IAAI,GAAK,OAA3C,CAEP,MAAO,MAAMC,CAAAA,UAAU,CAAID,IAAD,EAAkBA,IAAI,GAAK,UAA9C,CAEP,MAAO,SAASE,CAAAA,QAAT,CAA4DC,EAA5D,CAAqEC,IAArE,CAAmFC,SAAnF,CAAwG,CAC5G,GAAIC,CAAAA,OAAJ,CAEA,MAAO,CAAQ,GAAGC,IAAX,GAAkC,CACtC,KAAMC,CAAAA,OAAO,CAAG,IAAhB,CAEA,KAAMC,CAAAA,KAAK,CAAG,IAAM,CACjBH,OAAO,CAAG,IAAV,CACA,GAAI,CAACD,SAAL,CAAgBF,EAAE,CAACO,KAAH,CAASF,OAAT,CAAkBD,IAAlB,EAClB,CAHD,CAKA,KAAMI,CAAAA,OAAO,CAAGN,SAAS,EAAI,CAACC,OAA9B,CACAM,YAAY,CAACN,OAAD,CAAZ,CACAA,OAAO,CAAGO,UAAU,CAACJ,KAAD,CAAQL,IAAR,CAApB,CAEA,GAAIO,OAAJ,CAAa,CACVR,EAAE,CAACO,KAAH,CAASF,OAAT,CAAkBD,IAAlB,EACF,CACH,CAfD,CAgBF,CAED,MAAO,SAASO,CAAAA,eAAT,CAAmCC,UAAnC,CAAoDC,WAApD,CAAsE,CAC1E,GAAIC,CAAAA,MAAM,CAAG,KAAb,CACA,GAAI,MAAOF,CAAAA,UAAP,GAAsB,QAA1B,CAAoC,CACjCE,MAAM,CAAGC,IAAI,CAACC,SAAL,CAAeJ,UAAf,IAA+BG,IAAI,CAACC,SAAL,CAAeH,WAAf,CAAxC,CACF,CAFD,IAEO,CACJC,MAAM,CAAGG,MAAM,CAACL,UAAD,CAAN,GAAuBK,MAAM,CAACJ,WAAD,CAAtC,CACF,CAED,MAAO,CACJK,OAAO,CAAE,IAAMJ,MAAM,GAAK,IADtB,CAEJK,WAAW,CAAE,IAAML,MAAM,GAAK,KAF1B,CAAP,CAIF,CAED,MAAO,SAASM,CAAAA,OAAT,CAAiBC,GAAjB,CAA2B,CAC/B,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CAA0B,CAAjC,CACF,CAED,MAAO,SAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAAsC,CAC1C,MAAOA,CAAAA,GAAG,CACNC,KADG,CACG,GADH,EAEHC,IAFG,CAEE,GAFF,EAGHD,KAHG,CAGG,GAHH,EAIHC,IAJG,CAIE,EAJF,CAAP,CAKF","sourcesContent":["export const isRadio = (type: string) => type === 'radio'\n\nexport const isCheckbox = (type: string) => type === 'checkbox'\n\nexport function debounce<TThis, TFn extends Function>(this: TThis, fn: TFn, wait: number, immediate?: boolean) {\n   let timeout: any\n\n   return <TArgs>(...args: Array<TArgs>) => {\n      const context = this\n\n      const later = () => {\n         timeout = null\n         if (!immediate) fn.apply(context, args)\n      }\n\n      const callNow = immediate && !timeout\n      clearTimeout(timeout)\n      timeout = setTimeout(later, wait)\n\n      if (callNow) {\n         fn.apply(context, args)\n      }\n   }\n}\n\nexport function deepComparative<TFV, TFS>(firstValue: TFV, secondValue: TFS) {\n   let result = false\n   if (typeof firstValue === 'object') {\n      result = JSON.stringify(firstValue) !== JSON.stringify(secondValue)\n   } else {\n      result = String(firstValue) !== String(secondValue)\n   }\n\n   return {\n      isEqual: () => result === true,\n      isDifferent: () => result === false\n   }\n}\n\nexport function isEmpty(obj: any) {\n   return Object.keys(obj).length > 0\n}\n\nexport function makeDotNotation(str: string) {\n   return str\n      .split('[')\n      .join('.')\n      .split(']')\n      .join('')\n}"]}]}
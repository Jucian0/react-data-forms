{"remainingRequest":"/home/barbosa/javascript/useform/packages/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/home/barbosa/javascript/useform/packages/docs/src/components/controlled/index.jsx","dependencies":[{"path":"/home/barbosa/javascript/useform/packages/docs/src/components/controlled/index.jsx","mtime":1603657360702},{"path":"/home/barbosa/javascript/useform/node_modules/cache-loader/dist/cjs.js","mtime":1603638032289},{"path":"/home/barbosa/javascript/useform/packages/docs/node_modules/babel-loader/lib/index.js","mtime":1603638031594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvYmFyYm9zYS9qYXZhc2NyaXB0L3VzZWZvcm0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydHt1c2VGb3JtfWZyb20ndXNlZm9ybXMnO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7Q29udGFpbmVyLFJvdyxDb2x9ZnJvbSdyZWFjdC1ncmlkLXN5c3RlbSc7aW1wb3J0e0lucHV0LFJhbmdlLENvbnRhaW5lckpzb25WaWV3LEJ1dHRvbixCdXR0b25zfWZyb20nLi4nO2ltcG9ydCBKU09OUHJldHR5IGZyb20ncmVhY3QtanNvbi1wcmV0dHknO2NvbnN0IGluaXRpYWxWYWx1ZXM9e2RhdGExOid0ZXN0Jyxjb21wbGV4RGF0YTpbe2ZpcnN0Oid0ZXN0Q29tcGxleERhdGEnLHNjb3JlOjQ1fV19O2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbnRyb2xsZWQoKXtjb25zdFt7dmFsdWVzLHJlc2V0LG9uU3VibWl0fSx7aW5wdXR9XT11c2VGb3JtKHtvbkNoYW5nZTp0cnVlLGluaXRpYWxWYWx1ZXN9KTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3csbnVsbCwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb2wse3NtOjZ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJmb3JtIix7b25TdWJtaXQ6b25TdWJtaXQoZT0+Y29uc29sZS5sb2coZSkpLG9uUmVzZXQ6cmVzZXR9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KElucHV0LF9leHRlbmRzKHtwbGFjZWhvbGRlcjoiZGF0YTEifSxpbnB1dCgnZGF0YTEnLCd0ZXh0JykpKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dCxfZXh0ZW5kcyh7cGxhY2Vob2xkZXI6ImNvbXBsZXhEYXRhLjAuZmlyc3QifSxpbnB1dCgnY29tcGxleERhdGEuMC5maXJzdCcsJ3RleHQnKSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KElucHV0LF9leHRlbmRzKHtwbGFjZWhvbGRlcjoiY29tcGxleERhdGEuMC5zY29yZSJ9LGlucHV0KHtuYW1lOidjb21wbGV4RGF0YS4wLnNjb3JlJyx0eXBlOidudW1iZXInfSkpKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b25zLG51bGwsLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLHt0eXBlOiJyZXNldCJ9LCJSZXNldCIpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbix7dHlwZToic3VibWl0In0sIlN1Ym1pdCIpKSkpLC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbCx7c206Nn0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVySnNvblZpZXcsbnVsbCwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChKU09OUHJldHR5LHtpZDoianNvbi1wcmV0dHkiLGRhdGE6dmFsdWVzfSkpKSk7fQ=="},{"version":3,"sources":["/home/barbosa/javascript/useform/packages/docs/src/components/controlled/index.jsx"],"names":["useForm","React","Container","Row","Col","Input","Range","ContainerJsonView","Button","Buttons","JSONPretty","initialValues","data1","complexData","first","score","Controlled","values","reset","onSubmit","input","onChange","e","console","log","name","type"],"mappings":"uGAAA,OAASA,OAAT,KAAwB,UAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,GAAzB,KAAoC,mBAApC,CACA,OAASC,KAAT,CAAgBC,KAAhB,CAAuBC,iBAAvB,CAA0CC,MAA1C,CAAkDC,OAAlD,KAAiE,IAAjE,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CAEA,KAAMC,CAAAA,aAAa,CAAG,CACpBC,KAAK,CAAE,MADa,CAEpBC,WAAW,CAAE,CACX,CACEC,KAAK,CAAE,iBADT,CAEEC,KAAK,CAAE,EAFT,CADW,CAFO,CAAtB,CAUA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACnC,KAAM,CAAC,CAAEC,MAAF,CAAUC,KAAV,CAAiBC,QAAjB,CAAD,CAA8B,CAAEC,KAAF,CAA9B,EAA2CpB,OAAO,CAAC,CACvDqB,QAAQ,CAAE,IAD6C,CAEvDV,aAFuD,CAAD,CAAxD,CAKA,mBACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,4BAAM,QAAQ,CAAEQ,QAAQ,CAACG,CAAC,EAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAN,CAAxB,CAA+C,OAAO,CAAEJ,KAAxD,eACE,oBAAC,KAAD,WAAO,WAAW,CAAC,OAAnB,EAA+BE,KAAK,CAAC,OAAD,CAAU,MAAV,CAApC,EADF,cAEE,oBAAC,KAAD,WACE,WAAW,CAAC,qBADd,EAEMA,KAAK,CAAC,qBAAD,CAAwB,MAAxB,CAFX,EAFF,cAME,oBAAC,KAAD,WACE,WAAW,CAAC,qBADd,EAEMA,KAAK,CAAC,CAAEK,IAAI,CAAE,qBAAR,CAA+BC,IAAI,CAAE,QAArC,CAAD,CAFX,EANF,cAUE,oBAAC,OAAD,mBACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,UADF,cAEE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,WAFF,CAVF,CADF,CADF,cAkBE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,iBAAD,mBACE,oBAAC,UAAD,EAAY,EAAE,CAAC,aAAf,CAA6B,IAAI,CAAET,MAAnC,EADF,CADF,CAlBF,CADF,CA0BD","sourcesContent":["import { useForm } from 'useforms'\nimport React from 'react'\nimport { Container, Row, Col } from 'react-grid-system'\nimport { Input, Range, ContainerJsonView, Button, Buttons } from '..'\nimport JSONPretty from 'react-json-pretty'\n\nconst initialValues = {\n  data1: 'test',\n  complexData: [\n    {\n      first: 'testComplexData',\n      score: 45\n    }\n  ]\n}\n\nexport default function Controlled() {\n  const [{ values, reset, onSubmit }, { input }] = useForm({\n    onChange: true,\n    initialValues\n  })\n\n  return (\n    <Row>\n      <Col sm={6}>\n        <form onSubmit={onSubmit(e => console.log(e))} onReset={reset}>\n          <Input placeholder=\"data1\" {...input('data1', 'text')} />\n          <Input\n            placeholder=\"complexData.0.first\"\n            {...input('complexData.0.first', 'text')}\n          />\n          <Input\n            placeholder=\"complexData.0.score\"\n            {...input({ name: 'complexData.0.score', type: 'number' })}\n          />\n          <Buttons>\n            <Button type=\"reset\">Reset</Button>\n            <Button type=\"submit\">Submit</Button>\n          </Buttons>\n        </form>\n      </Col>\n      <Col sm={6}>\n        <ContainerJsonView>\n          <JSONPretty id=\"json-pretty\" data={values}></JSONPretty>\n        </ContainerJsonView>\n      </Col>\n    </Row>\n  )\n}\n"]}]}